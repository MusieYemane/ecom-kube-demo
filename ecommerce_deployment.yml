apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecommerce-deployment
  labels:
    app: ecommerce
spec:
  replicas: 2 # Number of pod
  selector:
    matchLabels:
      app: ecommerce
  template:
    metadata:
      labels:
        app: ecommerce
    spec:
      containers:
        - name: ecommerce-container
          image: musie25/ecommerce-app:v1 # Replace with your Docker image
          ports:
            - containerPort: 8080 # Application port
          env: # Hardcoded environment variables
            - name: DB_USER
              value: "your_user" # Replace with your database username
            - name: DB_PASSWORD
              value: "your_password" # Replace with your database password
            - name: DB_HOST
              value: "postgres-service" # Replace with your database host
            - name: DB_PORT
              value: "5432" # Replace with your database port
            - name: DB_NAME
              value: "ecommerce" # Replace with your database name
          livenessProbe: # Probe for checking if the app is alive
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 30
          readinessProbe: # Probe for checking if the app is ready to handle traffic
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  name: ecommerce-service
  labels:
    app: ecommerce
spec:
  type: LoadBalancer # ClusterIP: if Internal service; Change to LoadBalancer or NodePort if exposing externally
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: ecommerce