jobs:
  # Step 1: Build and Test the Application
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Application with Gradle
        run: ./gradlew bootJar -x test

      - name: Verify Build Output
        run: ls -l build/libs/

  # Step 2: Build and Push Docker Image
  dockerize:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Prepare Docker Context
        run: |
          mkdir -p docker-context
          cp build/libs/*.jar docker-context/

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:latest

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/ecommerce-app:latest